/*! angular-google-maps 0.0.0 2013-05-29
 *  AngularJS directives for Google Maps
 *  git: https://github.com/nlaplante/angular-google-maps.git
 */
angular.module("google-maps",[]),angular.module("google-maps").directive("googleMap",["$log","$timeout","$filter",function(a,b){"use strict";function c(a,b){return Math.abs(a-b)<1e-6}function d(a){return angular.isDefined(a)&&null!=a&&a===!0||"1"===a||"y"===a||"true"===a}return function(){function a(a){var d=null,e=[],f=[],g=[],h=angular.extend({},b,a),i=this,j=null;this.center=a.center,this.zoom=h.zoom,this.draggable=h.draggable,this.dragging=!1,this.selector=h.container,this.markers=[],this.options=h.options,this.draw=function(){if(null!=i.center)if(null==d)d=new google.maps.Map(i.selector,angular.extend(i.options,{center:i.center,zoom:i.zoom,draggable:i.draggable,mapTypeId:google.maps.MapTypeId.ROADMAP})),google.maps.event.addListener(d,"dragstart",function(){i.dragging=!0}),google.maps.event.addListener(d,"idle",function(){i.dragging=!1}),google.maps.event.addListener(d,"drag",function(){i.dragging=!0}),google.maps.event.addListener(d,"zoom_changed",function(){i.zoom=d.getZoom(),i.center=d.getCenter()}),google.maps.event.addListener(d,"center_changed",function(){i.center=d.getCenter()}),f.length&&angular.forEach(f,function(a){google.maps.event.addListener(d,a.on,a.handler)});else{google.maps.event.trigger(d,"resize");var a=d.getCenter();c(a.lat(),i.center.lat())&&c(a.lng(),i.center.lng())||d.setCenter(i.center),d.getZoom()!=i.zoom&&d.setZoom(i.zoom)}},this.fit=function(){if(d&&e.length){var a=new google.maps.LatLngBounds;angular.forEach(e,function(b){a.extend(b.getPosition())}),d.fitBounds(a)}},this.on=function(a,b){f.push({on:a,handler:b})},this.addMarker=function(a,b,c,f,g,h,k){if(null==i.findMarker(a,b)){var l=new google.maps.Marker({position:new google.maps.LatLng(a,b),map:d,icon:c});if(null!=f){var m=new google.maps.InfoWindow({content:f});google.maps.event.addListener(l,"click",function(){null!=j&&j.close(),m.open(d,l),j=m})}return e.unshift(l),i.markers.unshift({lat:a,lng:b,draggable:!1,icon:c,infoWindowContent:f,label:g,url:h,thumbnail:k}),l}},this.findMarker=function(a,b){for(var d=0;d<e.length;d++){var f=e[d].getPosition();if(c(f.lat(),a)&&c(f.lng(),b))return e[d]}return null},this.findMarkerIndex=function(a,b){for(var d=0;d<e.length;d++){var f=e[d].getPosition();if(c(f.lat(),a)&&c(f.lng(),b))return d}return-1},this.addInfoWindow=function(a,b,c){var d=new google.maps.InfoWindow({content:c,position:new google.maps.LatLng(a,b)});return g.push(d),d},this.hasMarker=function(a,b){return null!==i.findMarker(a,b)},this.getMarkerInstances=function(){return e},this.removeMarkers=function(a){var b=this;angular.forEach(a,function(a){var c=a.getPosition(),d=c.lat(),f=c.lng(),g=b.findMarkerIndex(d,f);e.splice(g,1),b.markers.splice(g,1),a.setMap(null)})}}var b={zoom:8,draggable:!1,container:null};return a}(),{restrict:"ECAM",transclude:!0,replace:!1,template:'<div class="angular-google-map"><div class="angular-google-map-container"></div><div ng-transclude></div></div>',scope:{center:"=center",zoom:"=zoom",latitude:"=latitude",longitude:"=longitude",markers:"=markers",refresh:"&refresh",windows:"=windows",events:"=events"},controller:["$scope",function(a){this.getMap=function(){return a.map}}],link:function(c,e,f){if(!angular.isDefined(c.center)||!angular.isDefined(c.center.latitude)||!angular.isDefined(c.center.longitude))return a.error("angular-google-maps: could not find a valid center property"),void 0;if(!angular.isDefined(c.zoom))return a.error("angular-google-maps: map zoom property not set"),void 0;angular.element(e).addClass("angular-google-map");var g={options:{}};f.options&&(g.options=angular.fromJson(f.options));var h=new google.maps.Map(e.find("div")[1],angular.extend(g,{center:new google.maps.LatLng(c.center.latitude,c.center.longitude),draggable:d(f.draggable),zoom:c.zoom,mapTypeId:google.maps.MapTypeId.ROADMAP}));if(google.maps.event.addListener(h,"drag",function(){var a=h.center;b(function(){c.$apply(function(){c.center.latitude=a.lat(),c.center.longitude=a.lng()})})}),google.maps.event.addListener(h,"zoom_changed",function(){c.zoom!=h.zoom&&b(function(){c.$apply(function(){c.zoom=h.zoom})})}),google.maps.event.addListener(h,"center_changed",function(){var a=h.center;b(function(){c.$apply(function(){h.dragging||(c.center.latitude=a.lat(),c.center.longitude=a.lng())})})}),angular.isDefined(c.events)&&null!=c.events&&angular.isObject(c.events))for(var i in c.events)c.events.hasOwnProperty(i)&&angular.isFunction(c.events[i])&&google.maps.event.addListener(h,i,function(){c.events[i].apply(c,[h,i,arguments])});if(d(f.markClick)){var j=null;google.maps.event.addListener(h,"click",function(a){null==j?(j={latitude:a.latLng.lat(),longitude:a.latLng.lng()},c.markers.push(j)):(j.latitude=a.latLng.lat(),j.longitude=a.latLng.lng()),b(function(){c.latitude=j.latitude,c.longitude=j.longitude,c.$apply()})})}c.map=h,google.maps.event.trigger(h,"resize"),angular.isUndefined(c.refresh())||c.$watch("refresh()",function(a,b){if(a&&!b){var c=new google.maps.LatLng(a.latitude,a.longitude);d(f.pan)?h.panTo(c):h.setCenter(c)}}),c.$watch("center",function(a,b){if(a!==b&&!h.dragging){var c=new google.maps.LatLng(a.latitude,a.longitude);d(f.pan)?h.panTo(c):h.setCenter(c)}},!0),c.$watch("zoom",function(a,b){a!==b&&h.setZoom(a)})}}}]),angular.module("google-maps").directive("marker",["$log",function(){"use strict";var a={animation:google.maps.Animation.DROP};return{restrict:"ECAM",require:"^googleMap",priority:-1,transclude:!0,template:'<span class="angular-google-map-marker" ng-transclude></span>',replace:!0,scope:{coords:"=coords",click:"&click"},link:function(b,c,d,e){var f=angular.extend({},a,{position:new google.maps.LatLng(b.coords.latitude,b.coords.longitude),map:e.getMap()}),g=new google.maps.Marker(f);b.$watch("coords",function(a,b){a!==b&&g.setPosition(new google.maps.LatLng(a.latitude,a.longitude))},!0)}}}]),angular.module("google-maps").directive("polyline",["$log","$timeout",function(){"use strict";return{restrict:"ECA",require:"^googleMap",scope:{},link:function(a,b,c,d){d.getMap()}}}]);