/*! angular-google-maps 2.1.0-X.8 2015-04-07
 *  AngularJS directives for Google Maps
 *  git: https://github.com/angular-ui/angular-google-maps.git
 */
!function(a,b){"use strict";(function(){b.module("uiGmapgoogle-maps.providers",[]),b.module("uiGmapgoogle-maps.wrapped",[]),b.module("uiGmapgoogle-maps.extensions",["uiGmapgoogle-maps.wrapped","uiGmapgoogle-maps.providers"]),b.module("uiGmapgoogle-maps.directives.api.utils",["uiGmapgoogle-maps.extensions"]),b.module("uiGmapgoogle-maps.directives.api.managers",[]),b.module("uiGmapgoogle-maps.directives.api.options",["uiGmapgoogle-maps.directives.api.utils"]),b.module("uiGmapgoogle-maps.directives.api.options.builders",[]),b.module("uiGmapgoogle-maps.directives.api.models.child",["uiGmapgoogle-maps.directives.api.utils","uiGmapgoogle-maps.directives.api.options","uiGmapgoogle-maps.directives.api.options.builders"]),b.module("uiGmapgoogle-maps.directives.api.models.parent",["uiGmapgoogle-maps.directives.api.managers","uiGmapgoogle-maps.directives.api.models.child","uiGmapgoogle-maps.providers"]),b.module("uiGmapgoogle-maps.directives.api",["uiGmapgoogle-maps.directives.api.models.parent"]),b.module("uiGmapgoogle-maps",["uiGmapgoogle-maps.directives.api","uiGmapgoogle-maps.providers"])}).call(this),function(){b.module("uiGmapgoogle-maps").directive("uiGmapStreetViewPanorama",["uiGmapGoogleMapApi","uiGmapLogger","uiGmapGmapUtil","uiGmapEventsHelper",function(a,c,d,e){var f;return f="uiGmapStreetViewPanorama",{restrict:"EMA",template:'<div class="angular-google-map-street-view-panorama"></div>',replace:!0,scope:{focalcoord:"=",radius:"=?",events:"=?",options:"=?",control:"=?",povoptions:"=?",imagestatus:"="},link:function(g,h){return a.then(function(){return function(){var a,i,j,k,l,m,n,o,p,q;return o=void 0,q=void 0,j=!1,m=void 0,n=null,p=null,a=function(){return e.removeEvents(m),null!=o&&(o.unbind("position"),o.setVisible(!1)),null!=q?(null!=(null!=q?q.setVisible:void 0)&&q.setVisible(!1),q=void 0):void 0},l=function(a,c){var d;return d=google.maps.geometry.spherical.computeHeading(a,c),j=!0,g.radius=g.radius||50,p=b.extend({heading:d,zoom:1,pitch:0},g.povoptions||{}),n=n=b.extend({navigationControl:!1,addressControl:!1,linksControl:!1,position:a,pov:p,visible:!0},g.options||{}),j=!1},i=function(){var b;return g.focalcoord?g.radius?(a(),null==q&&(q=new google.maps.StreetViewService),g.events&&(m=e.setEvents(q,g,g)),b=d.getCoords(g.focalcoord),q.getPanoramaByLocation(b,g.radius,function(a,c){var d,e,f;return null!=g.imagestatus&&(g.imagestatus=c),null!=(null!=(f=g.events)?f.image_status_changed:void 0)&&g.events.image_status_changed(q,"image_status_changed",g,c),"OK"===c?(e=a.location.latLng,l(e,b),d=h[0],o=new google.maps.StreetViewPanorama(d,n)):void 0})):void c.error(f+": needs a radius to set the camera view from its focal target."):void c.error(f+": focalCoord needs to be defined")},null!=g.control&&(g.control.getOptions=function(){return n},g.control.getPovOptions=function(){return p},g.control.getGObject=function(){return q},g.control.getGPano=function(){return o}),g.$watch("options",function(a,b){return a===b||a===n||j?void 0:i()}),k=!0,g.$watch("focalcoord",function(a,b){return a===b&&!k||null==a?void 0:(k=!1,i())}),g.$on("$destroy",function(){return a()})}}(this))}}}])}.call(this)}(window,angular);